// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @unique @default(autoincrement())
  email       String    @unique
  username    String?   @db.VarChar(20)
  displayName String    @db.VarChar(40)
  activity    DateTime?
  bio         String?   @db.VarChar(120)
  imgUrl      String?
  chat        Chat[]
  account     Account?
  sessions    Session[]
}

model Chat {
  id       Int       @id @default(autoincrement())
  user     User      @relation(fields: [userId], references: [id])
  userId   Int
  messages Message[]
}

model Message {
  id        Int      @id @default(autoincrement())
  chatId    Int
  text      String   @db.VarChar(2048)
  user      Chat     @relation(fields: [chatId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                 String    @id @default(cuid())
  userId             Int       @unique
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])
  Session            Session[]

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  accountId    String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User?    @relation(fields: [userId], references: [id])
  userId       Int
  Account      Account  @relation(fields: [accountId], references: [id])
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
